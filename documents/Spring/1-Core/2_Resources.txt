2. Resources
    A. Interface Resource extends InputStreamSource
    B. Pre-Implemented resources:
        UrlResource
        ClassPathResource prefix: "classpath:"
        FileSystemResource
        ServletContextResource
        InputStreamResource
        ByteArrayResource
    C. ResourceLoader
        // Classpath resource
        Resource template = ctx.getResource("classpath:some/resource/path/myTemplate.txt");
        // File system resource
        Resource template = ctx.getResource("file:///some/resource/path/myTemplate.txt");
        // URL resource
        Resource template = ctx.getResource("http://myhost.com/resource/path/myTemplate.txt");
    D. Force Bean Resource Type:
        <property name="template" value="classpath:some/resource/path/myTemplate.txt">
        <property name="template" value="file:///some/resource/path/myTemplate.txt"/>
    F. ApplicationContext extends ResourceLoader
        ApplicationContext ctx = new ClassPathXmlApplicationContext("conf/appContext.xml");
        ApplicationContext ctx =
            new FileSystemXmlApplicationContext("conf/appContext.xml"); // Relative Path

    E. Codes:
        public interface Resource extends InputStreamSource {

            boolean exists();

            boolean isOpen();

            URL getURL() throws IOException;

            File getFile() throws IOException;

            Resource createRelative(String relativePath) throws IOException;

            String getFilename();

            String getDescription();

        }

        public interface InputStreamSource {

            InputStream getInputStream() throws IOException;

        }

        public interface ResourceLoader {

            Resource getResource(String location);

        }

        public interface ResourceLoaderAware {

            void setResourceLoader(ResourceLoader resourceLoader);
        }
